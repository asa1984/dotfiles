{
  inputs,
  pkgs,
  hostname,
  username,
  ...
}: {
  imports =
    [
      ./hardware-configuration.nix

      ../../modules/flatpak.nix
      ../../modules/fcitx5.nix
      ../../modules/fonts.nix
      ../../modules/gaming.nix
      ../../modules/i18n.nix
      ../../modules/networking.nix
      ../../modules/nix.nix
      ../../modules/sound.nix
      ../../modules/system-tools.nix
      ../../modules/virtualisation.nix
      ../../modules/xremap.nix
      ../../modules/xserver.nix
    ]
    ++ (with inputs.nixos-hardware.nixosModules; [
      common-cpu-amd
      common-gpu-amd
      common-pc-ssd
    ]);

  boot = {
    loader = {
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };
    kernelPackages = pkgs.linuxPackages_xanmod_latest;
  };

  networking.hostName = hostname;

  nixpkgs.config.allowUnfree = true;

  # Don't touch this
  system.stateVersion = "22.11";

  users.users."${username}" = {
    isNormalUser = true;
    shell = pkgs.zsh;
    extraGroups = [
      "networkmanager"
      "wheel"
      "audio"
      "video"
    ];
  };

  environment.systemPackages = with pkgs; [
    bottom
    direnv
    zellij
  ];

  programs = {
    zsh.enable = true;
    git.enable = true;
    neovim = {
      enable = true;
      defaultEditor = true;
      viAlias = true;
      vimAlias = true;
    };
    droidcam.enable = true;
  };

  # Use session generated by home-manager
  services.xserver = {
    enable = true;
  };

  services.greetd = {
    enable = true;
    settings = {
      default_session = {
        command = ''
          ${pkgs.greetd.tuigreet}/bin/tuigreet --time --cmd Hyprland
        '';
        user = username;
      };
    };
  };

  # Hyprland
  programs.hyprland = {
    enable = true;
    package = inputs.hyprland.packages.${pkgs.system}.hyprland;
  };
  nix.settings = {
    substituters = ["https://hyprland.cachix.org"];
    trusted-public-keys = ["hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc="];
  };
  services.xremap.withWlroots = true;
}
